<Application x:Class="MySchool.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MySchool"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Main font (global) -->
        <!-- Reference the embedded font file explicitly and use its internal family name -->
        <FontFamily x:Key="Font.Main">pack://application:,,,/MySchool;component/resources/fonts/SF-Pro.ttf#SF Pro</FontFamily>

        <!-- Default TextBlock font and color so pages without explicit styles still use the app font and themed text color -->
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource Font.Main}"/>
            <!-- Use DynamicResource because Brush.TextPrimary is defined later in this dictionary -->
            <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
        </Style>

        <!-- Color palette -->
        <SolidColorBrush x:Key="Brush.Primary" Color="#4F46E5"/>
        <SolidColorBrush x:Key="Brush.PrimaryDark" Color="#4338CA"/>
        <SolidColorBrush x:Key="Brush.Accent" Color="#06B6D4"/>
        <SolidColorBrush x:Key="Brush.Surface" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Brush.Background" Color="#F5F7FB"/>
        <SolidColorBrush x:Key="Brush.TextPrimary" Color="#0F172A"/>
        <SolidColorBrush x:Key="Brush.TextSecondary" Color="#475569"/>

        <!-- Typography helpers -->
        <Style x:Key="Text.Headline" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource Font.Main}"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
        </Style>
        <Style x:Key="Text.Title" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource Font.Main}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
        </Style>
        <Style x:Key="Text.Body" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource Font.Main}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource Brush.TextSecondary}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!-- Cards -->
        <Style x:Key="Card" TargetType="Border">
            <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="12" ShadowDepth="0" Opacity="0.14"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Buttons -->
        <Style x:Key="Button.Primary" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brush.PrimaryDark}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Button.Secondary" TargetType="Button" BasedOn="{StaticResource Button.Primary}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Primary}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource Brush.Primary}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Border.BorderBrush" Value="{StaticResource Brush.PrimaryDark}"/>
                                <Setter Property="Foreground" Value="{StaticResource Brush.PrimaryDark}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Icon text using Segoe MDL2 Assets -->
        <Style x:Key="Icon" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Primary}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Caption buttons (WinUI-like) -->
        <Style x:Key="CaptionButton" TargetType="Button">
            <Setter Property="Width" Value="46"/>
            <Setter Property="Height" Value="36"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.TextPrimary}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="root" Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#1A000000"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#33000000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CaptionButton.Close" TargetType="Button" BasedOn="{StaticResource CaptionButton}">
            <Setter Property="Foreground" Value="{StaticResource Brush.TextPrimary}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="root" Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#FFE81123"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="root" Property="Background" Value="#FFB10F1E"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern rounded scrollbar -->
        <!-- Button inside Track (hidden, we only want paging behavior) -->
        <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Thumb for the scrollbar -->
        <Style x:Key="ScrollBarThumb" TargetType="Thumb">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border x:Name="ThumbBd" CornerRadius="5" Background="{StaticResource Brush.Primary}" Opacity="0.7"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ThumbBd" Property="Opacity" Value="0.95"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="ThumbBd" Property="Opacity" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Default style for all ScrollBars -->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid x:Name="Root" Background="Transparent">
                            <!-- Track background behind the thumb -->
                            <Border x:Name="TrackBackground" Background="#15000000" CornerRadius="5"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Vertical scrollbar sizing -->
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter TargetName="Root" Property="Width" Value="10"/>
                                <Setter TargetName="TrackBackground" Property="Width" Value="10"/>
                                <Setter TargetName="TrackBackground" Property="Margin" Value="0,4,0,4"/>
                            </Trigger>
                            <!-- Horizontal scrollbar sizing -->
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="Root" Property="Height" Value="10"/>
                                <Setter TargetName="TrackBackground" Property="Height" Value="10"/>
                                <Setter TargetName="TrackBackground" Property="Margin" Value="4,0,4,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
